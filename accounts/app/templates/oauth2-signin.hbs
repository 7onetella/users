<div class="container">
  <div class="jumbotron">
    <p class="lead">
      <div class="media">
        <div class="media-body">
          <h5 class="mt-0">Faux Site ACME</h5>
          This page is emulating a third party site. This is a demo of SSO using OAuth2 Flow.
          Actual client side OAuth2 flow is implemented using javacript and html.
        </div>
      </div>
    </p>
    <hr class="my-4">
    <p class="lead">
    </p>
  </div>

  <div id="signindiv" class="card">
    <article class="card-body">
      <form>
        <div class="form-group">
          <button class="btn btn-light btn-block" type="button" onclick="openSignInWindow('/accounts/#/oauth2?' +
            'client_id=352b6e64-e498-4307-b64d-ec9e5b9da65c'+
            '&scope=read:profile,write:profile'+
            '&response_type=code'+
            '&response_mode=query'+
            '&nonce=sto7zydoa6o',
            'accounts_oauth2_popup')">
            <img class="mr-3" id="lock_img" src="{{rootURL}}assets/lock.png" alt="Lock">
            Sign In With AuthP
          </button>
        </div>
      </form>
    </article>
  </div>
</div>

<script>
  // CREDIT: https://dev.to/dinkydani21/how-we-use-a-popup-for-google-and-outlook-oauth-oci

  const receiveMessage = event => {
    console.log('receiving event')
    console.log('previous url = ' + previousUrl)
    console.log('window.origin = ' + this.window.origin)

    // Do we trust the sender of this message? (might be
    // different from what we originally opened, for example).
    if (event.origin !== this.window.origin) {
      return;
    }

    console.log('event.data = ' + event.data)

    // if we trust the sender and the source is our popup
    if (event.source.name === 'accounts_oauth2_popup') {
      // get the URL params and redirect to our server to use Passport to auth/login
      const payload = event.data;
      console.log('payload = ' + payload)
      const redirectUrl = `/accounts/#/demo/oauth2-post-signin${payload}`;
      window.location = redirectUrl;
    }
  };

  let windowObjectReference = null;
  let previousUrl = null;

  const openSignInWindow = (url, name) => {
    // append redirect url dynamically
    url = url + '&redirect_uri=' + encodeURI(this.window.origin) + '/accounts/%23/demo/oauth2-callback'
    console.log('url = ' + url)

    // remove any existing event listeners
    window.removeEventListener('message', receiveMessage);

    // window features
    const strWindowFeatures = 'toolbar=no, menubar=no, width=500, height=600, top=100, left=100';

    if (windowObjectReference === null || windowObjectReference.closed) {
      /* if the pointer to the window object in memory does not exist
       or if such pointer exists but the window was closed */
      windowObjectReference = window.open(url, name, strWindowFeatures);
    } else if (previousUrl !== url) {
      /* if the resource to load is different,
       then we load it in the already opened secondary window and then
       we bring such window back on top/in front of its parent window. */
      windowObjectReference = window.open(url, name, strWindowFeatures);
      windowObjectReference.focus();
    } else {
      /* else the window reference must exist and the window
       is not closed; therefore, we can bring it back on top of any other
       window with the focus() method. There would be no need to re-create
       the window or to reload the referenced resource. */
      windowObjectReference.focus();
    }

    // add the listener for receiving a message from the popup
    window.addEventListener('message', event => receiveMessage(event), false);
    // assign the previous URL
    previousUrl = url;
  };
</script>